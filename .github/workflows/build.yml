name: "build"

on:
  push:
    branches:
      - master
    tags:
      - "v*"

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Set env vars"
        run: |
          export_ga() {
            for name in "${@}"
            do
              echo "${name}=${!name}" >> "${GITHUB_ENV}"
            done
          }

          GH_REGISTRY="ghcr.io"
          DOCKER_HUB_REGISTRY="docker.io"
          GH_USER="${{ github.actor }}"
          DOCKER_HUB_USER="${{ vars.DOCKER_HUB_USER }}"
          IMAGE_NAME="${{ github.event.repository.name }}"
          GITHUB_SHA_SHORT="$(echo ${GITHUB_SHA} | cut -c1-8)"
          REFNAME="$(echo "${{ github.ref }}" | sed -e 's/.*\///')"
          VERSION="${REFNAME}"
          GH_IMAGE_NAME="$(echo "${GH_REGISTRY}/${GH_USER}/${IMAGE_NAME}")"
          DOCKER_HUB_IMAGE_NAME="$(echo "${DOCKER_HUB_REGISTRY}/${DOCKER_HUB_USER}/${IMAGE_NAME}")"

          export_ga GH_REGISTRY DOCKER_HUB_REGISTRY GH_USER DOCKER_HUB_USER IMAGE_NAME GITHUB_SHA_SHORT REFNAME VERSION GH_IMAGE_NAME DOCKER_HUB_IMAGE_NAME

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
        with:
          cosign-release: "v1.13.1"

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: "Login to github container registry"
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.1.0
        with:
          registry: "${{ env.GH_REGISTRY }}"
          username: "${{ env.GH_USER }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: "Login to docker hub container registry"
        if: "contains(github.ref, 'refs/tags')"
        uses: docker/login-action@v2.1.0
        with:
          registry: "${{ env.DOCKER_HUB_REGISTRY }}"
          username: "${{ env.DOCKER_HUB_USER }}"
          password: "${{ secrets.DOCKER_HUB_TOKEN }}"

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata (if not a tag)
        id: meta
        uses: docker/metadata-action@v4.4.0
        if: "!contains(github.ref, 'refs/tags')"
        with:
          tags: |
            type=sha,enable=true,priority=100,prefix=,suffix=,format=short
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
          images: |
            ${{ env.GH_IMAGE_NAME }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata (if not a tag)
        id: meta2
        uses: docker/metadata-action@v4.4.0
        if: "contains(github.ref, 'refs/tags')"
        with:
          images: |
            ${{ env.GH_IMAGE_NAME }}
            ${{ env.DOCKER_HUB_IMAGE_NAME }}

      - name: "Build image ${{ env.GH_IMAGE_NAME }} ${{ env.GITHUB_SHA_SHORT }}"
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ steps.meta2.outputs.tags }}
          labels: |
            ${{ steps.meta.outputs.labels }}
            ${{ steps.meta2.outputs.labels }}          
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: "Set env vars (for MAIN_DOCKER_TAG)"
        run: |
          export_ga() {
            for name in "${@}"
            do
              echo "${name}=${!name}" >> "${GITHUB_ENV}"
            done
          }

          META_MAIN_DOCKER_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n 1)
          META2_MAIN_DOCKER_TAG=$(echo "${{ steps.meta2.outputs.tags }}" | head -n 1)
          [ -n "${META_MAIN_DOCKER_TAG}" ] && MAIN_DOCKER_TAG="${META_MAIN_DOCKER_TAG}" || MAIN_DOCKER_TAG="${META2_MAIN_DOCKER_TAG}"

          export_ga MAIN_DOCKER_TAG

      - name: "Extract executable"
        run: |
          docker cp $(docker create "${{ env.MAIN_DOCKER_TAG }}"):/dudumper .

      - name: "Upload dudumper artifact"
        uses: "actions/upload-artifact@v3.1.2"
        with:
          name: "dudumper"
          path: "dudumper"

      - name: "Create release"
        if: "contains(github.ref, 'refs/tags')"
        uses: "softprops/action-gh-release@v1"
        with:
          files: |
            ./dudumper
